;; Q: Draw the tree illustrating the process generated by the count-change procedure of section 1.2.2 in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?

;; A:
;; Replacement:

(count-change 11)
(cc 11 5)
(+ (cc 11 4) (cc (- 11 (first-denomination 5)) 5))
(+ (+ (cc 11 3) (cc (- 11 (first-denomination 4)) 4)) (cc (- 11 50) 5))
(+ (+ (+ (cc 11 2) (cc (- 11 (first-denomination 3)) 3)) (cc (- 11 25) 4)) (cc -39 5))
(+ (+ (+ (+ (cc 11 1) (cc (- 11 (first-denomination 2)) 2)) (cc (- 11 10) 3)) (cc -14 4)) 0)
(+ (+ (+ (+ (+ (cc 11 0) (cc (- 11 (first-denomination 1)) 1)) (cc (- 11 5) 2)) (cc 1 3)) 0) 0)
(+ (+ (+ (+ (+ 0 (cc (- 11 1) 1)) (cc 6 2)) (+ (cc 1 2) (cc (- 1 (first-denomination 3) 3)))) 0) 0)
(+ (+ (+ (+ (+ 0 (cc 10 1)) (+ (cc 6 1) (cc (- 6 (first-denomination 2)) 2))) (+ (+ (cc 1 1) (cc (- 1 (first-denomination 2)) 2)) (cc (- 1 10) 3))) 0) 0)
(+ (+ (+ (+ (+ 0 (+ (cc 10 0) (cc (- 10 (first-denomination 1) 1))) (+ (+ (cc 6 0) (cc (- 6 (first-denomination 1)) 1)) (cc (- 6 5) 2))) (+ (+ (+ (cc 1 0) (cc (- 1 (first-denomination 1)) 1)) (cc (- 1 5) 2))) (cc -9 3))) 0) 0)

(+ (+ (+ (+ (+ 0 (+ (cc 10 0) (cc (- 10 (first-denomination 1)) 1)) (+ (+ (cc 6 0) (cc (- 6 (first-denomination 1)) 1)) (cc (- 6 5) 2)

;; (I really do not feel like finishing this expansion. We get the idea)

;; From the Internet mostly,
;; Space(n) = θ(n) because space is relative to the depth of the tree. Maximum tree depth is n
;; Time(n) = θ(n^k) where k is the number of denominations (in our case 5)
;; Time explanation:
; cc(n, 1) = θ(n)
; cc(n, 2) = cc(n, 1) + cc(n-5, 2)
; The step above is θ(n), taken ~ n/5 times
; This is θ(n^2)
; Therefore, θ(n^k) for k currency denominations
;; http://community.schemewiki.org/?sicp-ex-1.14
